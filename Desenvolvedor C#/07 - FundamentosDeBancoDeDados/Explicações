## Como surgiram os bancos de dados

    Surgimento dos bancos de dados
    Os bancos de dados são um conjunto de dados que se relacionam de forma a gerar um sentido e atender uma comunidade específica. Eles surgiram no final da década de 1960, início dos anos 70. Até então, os programadores usavam o próprio sistema de arquivos do sistema operacional para armazenar os dados dos programas desenvolvidos. Os registros eram gravados em arquivos, e consultados quando necessário. Porém, esse método tinha vários pontos fracos.

    Principais desvantagens do uso de arquivos:

    Dificuldade no acesso aos dados.
    Redundância.
    Inconsistência.
    Perda de arquivos, arquivos danificados.
    Problemas de integridade.
    Dentre os problemas descritos acima, um era “a pedra no caminho”: os sistemas de arquivos não permitiam o acesso simultâneo aos dados; ou seja, se um arquivo fosse aberto por certo processo, o sistema de arquivo o bloqueava e só liberava o acesso após seu fechamento. Nessa época, as redes estavam começando a florescer e havia grande necessidade de acesso concorrente (simultâneo) a um mesmo dado.

    A partir dessa necessidade é que foram criados os primeiros sistemas gerenciadores de bancos de dados, também conhecidos como SGBD. São softwares formados por um conjunto de funcionalidades, que visam suprir as necessidades básicas de um banco de dados, como: definição, recuperação e alteração de dados. Tal criação facilitou muito a vida dos programadores, que antes tinham de se preocupar com a forma como os dados eram gravados, fazer todo o mecanismo de conexão e métodos de pesquisa, entre outras coisas.

    Com o surgimento dos SGBD’s, os programadores passaram a se preocupar apenas em enviar e receber os dados, enquanto o SGBD faz o trabalho pesado. Isso diminuiu o tempo de desenvolvimento de software, pois os programadores agora se preocupam apenas com o projeto do banco de dados, uma vez que o SGBD contém todas as funcionalidades necessárias prontas.

    Principais vantagens dos bancos de dados em relação aos arquivos:

    Controle de redundância.
    Integridade referencial.
    Controle de acesso concorrente (simultâneo).
    Redução no tempo de desenvolvimento.
    Ferramentas de backup e recovery.

## Centralização de Dados

    As empresas sempre contaram com sistemas para facilitar os processos no dia a dia, mesmo antes da chegada da tecnologia da informação. Os sistemas antigos eram lentos e imprecisos, pois funcionavam de modo manual, com registros gravados em papel, um dos principais problemas era – e ainda continua sendo – a descentralização dos dados da organização.

    De forma gradual, os sistemas vêm sendo informatizados, mas os problemas de descentralização dos dados continuarão a existir porque os bancos de dados foram criados de forma independente uns dos outros, e esse tipo de migração pode gerar vários problemas nos dados de uma empresa.

    Vamos entender por que. Suponha uma empresa que funcione do seguinte modo:

    Tem duas filiais de vendas, uma em Curitiba e outra no Rio de Janeiro, e a matriz onde as notas são faturadas e enviadas para os clientes. Por falta de conectividade, os desenvolvedores usam banco de dados locais em cada uma das unidades.

    Essa descentralização de dados pode gerar vários problemas à empresa. Por exemplo, para ter o cadastro de um mesmo cliente em todas as unidades, ele deverá ser cadastrado no sistema de São Paulo, Rio e Curitiba, individualmente, gerando o que é chamado de redundância de dados (dados repetidos).

    É possível que, ao cadastrar o mesmo cliente já cadastrado, o funcionário do Rio de Janeiro digite o CNPJ da empresa errado, gerando assim o que é chamado de inconsistência de dados (dados diferentes).

    Com a centralização do banco de dados, consequentemente há o aumento na complexidade do banco. No caso do exemplo acima, seria preciso ter um cadastro que atendesse as necessidades das duas filiais e da matriz. Mesmo assim, por evitar problemas mais graves, ainda valeria à pena.

    ## Modelo Conceitual

    O modelo conceitual é o mais abstrato dos modelos, como mostra o diagrama no tópico anterior. Ele está mais distante do Hardware do computador e não depende do SGBD que vai ser usado no projeto, e muito menos da tecnologia que usará.

    O modelo conceitual é usado para gerar o modelo lógico, independente do tipo de SGBD. O mesmo modelo conceitual, que você desenvolveu para um banco de dados relacional, pode ser usado em um banco de dados hierárquico.

    Existem alguns tipos de técnicas de modelagem para o modelo conceitual. Neste curso será usado o ER – Entidade Relacionamento, que é largamente utilizado no mercado porque apresenta facilidades no mapeamento para o modelo lógico relacional, que também é o mais usado.

    Para representar o ER será usado um diagrama chamado Diagrama Entidade Relacionamento – DER. Esse diagrama é para o banco de dados mais ou menos o que o fluxograma é para quem está aprendendo lógica de programação, pois a partir dele, e usando técnicas de mapeamento, você é capaz de gerar os códigos SQL do seu banco de dados. A principal diferença entre ele e o fluxograma é que programadores experientes não precisam desenvolver fluxogramas para programar. Já o DER é parte essencial de um banco de dados e deve ser desenvolvido sempre, mesmo por DA’s - Data Administrator experientes, pois ele faz parte da documentação do projeto.

    Os DA’s são profissionais pouco conhecidos no mercado. Eles são responsáveis por toda a definição de dados de uma empresa. O profissional dessa área deve ter características tanto técnicas, para a modelagem correta de um banco de dados, como de negócios para entender corretamente a estrutura de processos da empresa.

## Modelo Lógico

    O modelo lógico é o nível de abstração intermediário entre o nível conceitual e o físico. Ele está fortemente ligado ao tipo de SGBD usado no projeto. Neste curso será abordado o modelo lógico para sistemas gerenciadores de banco de dados relacionais.

    O modelo relacional é o mais usado no mercado. Nesse modelo os dados são gravados em tabelas, que possuem colunas e chaves, entre outras coisas que serão explicadas adiante no curso.

## Modelo Físico
    Como o próprio nome sugere, o modelo físico é o que está mais perto do hardware do computador. Ele se ocupa em como os dados serão gravados no disco e como o banco de dados consultará os dados, entre outras coisas.

    Esse modelo geralmente é usado por profissionais que são responsáveis por otimizar o desempenho do banco. Tal processo também é chamado de tuning, e os ajustes acontecem mesmo depois de o banco de dados estar totalmente desenvolvido. Os profissionais dessa área precisam ter alto nível de conhecimento técnico e são muito valorizados no mercado de trabalho.

## O Conceito de Entidade Relacionamento

    * Técnica para a construção de modelos conceituais
    * modelo altamente podereoso
    * Técnica de modelagem amplamente utilizada
    * Diversos softwares para a criação de modelos
    * Diversos tipos de notações
    * Fácil tradução para o modelo relacional
    * Criada em 1976, por Peter Chen
    * A abordagem Entidade Relacionamento (ER) é representada graficamente pelo Diagrama Entidade Relacionamento (DER). 
        * Quando criamos um DER, dizemos que ele é um Modelo Entidade Relacionamento (MER), pois reproduz uma situação descrita. 

## DER (Diagrama Entidade Relacionamento)
    * O DER possui muitas notações, com pequenas diferenças
        - Estas alterações foram realizadas por acadêmicos e pesquisadores 
        - Alterações na implementação de softwares e modelagem

    * A notação mais comum é de Carlos Alberto Heuser, apresentada em 2001.
        - Entidade
        - Relacionamento
        - Atributos
        - Generalização/Especialização
        - Entidade Associativa

    * Outras abordagens:
        * Niam/ORM 
        * UML

## Entidade

        * Estudo de caso: Livraria
        * Entidades:
            Clientes: NomeCliente, EndereçoCliente, TelefoneCliente, CPFCliente, LivrosComprados, TipoPessoa
            Compra: DataCompra
            Livros: NomeLivro, , Assunto, Editora, ISBN 
            Autor: NomeAutorLivro
            TipoLivro:
            Estoque:
            Editoras: CódigoEditora, EndereçoEditora, TelefoneEditora, NomeGerenteEditora

        * Estudo de Caso: Hospital:
        * Entidades:
            Alas: IdAla, NomeAla
            Enfermeira: CRE, ÉChefe, NomeEnfermeira
            PlanoDeSaúde: IdPlanoSaude, NomePlanoSaude, TelefonePlanosaude
            Médicos: CRM, NomeMedico, EspecialidadeMedico
            Paciente: NomePaciente, CPFPaciente
            Atendimento: NomeMédico, NomePaciente, DataAtendimento, HoraAtendimento.
            Hospital: CNPJ,

            